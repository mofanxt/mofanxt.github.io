<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>mofanxt</title>
  
  
  <link href="https://mofanxt.github.io/atom.xml" rel="self"/>
  
  <link href="https://mofanxt.github.io/"/>
  <updated>2021-09-25T12:02:53.645Z</updated>
  <id>https://mofanxt.github.io/</id>
  
  <author>
    <name>mofanxt</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>给 AC86U/R7000 等梅林固件路由器的 KoolShare 科学上网插件支持 Xray 透明代理</title>
    <link href="https://mofanxt.github.io/2021/09/25/%E7%BB%99AC86U-R7000-%E7%AD%89%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E8%B7%AF%E7%94%B1%E5%99%A8%E7%9A%84-KoolShare-%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%8F%92%E4%BB%B6%E6%94%AF%E6%8C%81-xray-%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86/"/>
    <id>https://mofanxt.github.io/2021/09/25/%E7%BB%99AC86U-R7000-%E7%AD%89%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E8%B7%AF%E7%94%B1%E5%99%A8%E7%9A%84-KoolShare-%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%8F%92%E4%BB%B6%E6%94%AF%E6%8C%81-xray-%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86/</id>
    <published>2021-09-25T08:53:02.000Z</published>
    <updated>2021-09-25T12:02:53.645Z</updated>
    
    <content type="html"><![CDATA[<p>之前在 AC86U 上的 KoolShare 改版固件安装了科学上网插件，并开启了 ss + v2ray 插件的方式；但是由于这种方式性能太低，跑到 50M 带宽就把路由器的 CPU 跑满了。</p><p>最近看到 Xray 的 Vless + XTLS 的方案，尝试了下能在 AC86U 上把 300 M 带宽跑满。</p><p>这里分享一下如何复用原本的科学上网插件的情况下使用 Xray 做透明代理。<br><img src="/images/ss-tool.png"></p><p>先决条件：</p><ul><li>这里假设已经完成了科学上网的设置，并使用 ss 方式能跑通的前提下。</li><li>路由器已经开启了 ssh 。</li></ul><h1 id="1-安装配置-Xray-并设置开启启动"><a href="#1-安装配置-Xray-并设置开启启动" class="headerlink" title="1. 安装配置 Xray 并设置开启启动"></a>1. 安装配置 Xray 并设置开启启动</h1><h2 id="下载-Xray-二进制"><a href="#下载-Xray-二进制" class="headerlink" title="下载 Xray 二进制"></a>下载 Xray 二进制</h2><p>在 /jffs/ 目录下新建一个 xray 的目录，比如 /jffs/xray/<br>从 Xray github <a href="https://github.com/XTLS/Xray-core/releases">release 页面</a> 下载 Xray 最新版的 二进制文件：</p><p>AC86U 是 armv8 架构的，则下载 <a href="https://github.com/XTLS/Xray-core/releases/download/v1.4.5/Xray-linux-arm64-v8a.zip">Xray-linux-arm64-v8a.zip</a></p><p>如果是 R7000 则是 v5 架构的，请选择 <a href="https://github.com/XTLS/Xray-core/releases/download/v1.4.5/Xray-linux-arm32-v5.zip">Xray-linux-arm32-v5.zip</a></p><p>总之根据自己路由器平台选择二进制文件。</p><h2 id="上传并配置到路由器中"><a href="#上传并配置到路由器中" class="headerlink" title="上传并配置到路由器中"></a>上传并配置到路由器中</h2><p>解压并把 xray 文件上传到 /jffs/xray/ 目录<br>可以使用 scp 命令复制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp xray admin@192.168.50.1 /jffs/xray/</span><br></pre></td></tr></table></figure><p>（记得在路由器内给 xray 文件加上可执行权限 chmod +x /jffs/xray/xray）</p><p>然后 ssh 进入路由器，在 /jffs/xray/目录下 创建 conf.json 的 Xray 配置:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;log&quot;: &#123;</span><br><span class="line">        &quot;loglevel&quot;: &quot;none&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;inbounds&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;port&quot;: 23456,</span><br><span class="line">            &quot;protocol&quot;: &quot;socks&quot;,</span><br><span class="line">            &quot;settings&quot;: &#123;</span><br><span class="line">                &quot;auth&quot;: &quot;noauth&quot;,</span><br><span class="line">                &quot;udp&quot;: true,</span><br><span class="line">                &quot;ip&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">                &quot;clients&quot;: null</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;listen&quot;: &quot;0.0.0.0&quot;,</span><br><span class="line">            &quot;port&quot;: 3333,</span><br><span class="line">            &quot;protocol&quot;: &quot;dokodemo-door&quot;,</span><br><span class="line">            &quot;settings&quot;: &#123;</span><br><span class="line">                &quot;network&quot;: &quot;tcp,udp&quot;,</span><br><span class="line">                &quot;followRedirect&quot;: true</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;outbounds&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;protocol&quot;: &quot;vless&quot;,</span><br><span class="line">            &quot;settings&quot;: &#123;</span><br><span class="line">                &quot;vnext&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;address&quot;: &quot;你的地址&quot;,</span><br><span class="line">                        &quot;port&quot;: 443,</span><br><span class="line">                        &quot;users&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;id&quot;: &quot;xxxx&quot;,</span><br><span class="line">                                &quot;flow&quot;: &quot;xtls-rprx-splice&quot;,</span><br><span class="line">                                &quot;encryption&quot;: &quot;none&quot;,</span><br><span class="line">                                &quot;level&quot;: 0</span><br><span class="line">                            &#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;streamSettings&quot;: &#123;</span><br><span class="line">                &quot;network&quot;: &quot;tcp&quot;,</span><br><span class="line">                &quot;security&quot;: &quot;xtls&quot;,</span><br><span class="line">                &quot;xtlsSettings&quot;: &#123;</span><br><span class="line">                    &quot;serverName&quot;: &quot;你的地址域名&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置开机启动脚本"><a href="#配置开机启动脚本" class="headerlink" title="配置开机启动脚本"></a>配置开机启动脚本</h2><p>/jffs/scripts/ 目录下新建开机启动脚本 xray-start.sh </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vi  /jffs/scripts/xray-start.sh </span><br></pre></td></tr></table></figure><p>填入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">nohup /jffs/xray/xray run -c /jffs/xray/conf.json &gt; /jffs/xray/out.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>并给到执行权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /jffs/scripts/xray-start.sh </span><br></pre></td></tr></table></figure><p>此时就可以执行以下命令启动 Xary 了（注意此时如果开启了科学上网插件的话会启动失败，因为我们上面配置的 Xary 3333 和 23456 端口都被科学上网插件启动的 ss-local 和 ss-redir 给占用了，下面会介绍如何禁用这两个进程，用我们的 Xray 来替代）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/jffs/scripts/xray-start.sh </span><br></pre></td></tr></table></figure><p>如果想关闭 Xray 进程，则可以执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps | grep xray | grep -v grep | awk &#x27;&#123;print $1&#125;&#x27; | xargs kill</span><br></pre></td></tr></table></figure><p>最后配置一下开机启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /jffs/scripts/services-start</span><br></pre></td></tr></table></figure><p>在 /jffs/scripts/services-start 最后加入 /jffs/scripts/xray-start.sh ,最后 xray-start.sh 内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">/koolshare/bin/ks-services-start.sh</span><br><span class="line">/jffs/scripts/xray-start.sh # 新增这行</span><br></pre></td></tr></table></figure><p>此时就可以开机自动启动 Xray 啦～</p><p>注意如果使用科学上网的大陆白名单策略的话需要修改梅林的 ntp 服务器为国内服务器（如：cn.ntp.org.cn），否则路由器启动时同步时间失败导致 tls 握手会失败。<br>在梅林的 系统管理-〉系统设置下找到 ntp 服务并修改：<br><img src="/images/ntp.png"></p><h2 id="修改科学上网脚本"><a href="#修改科学上网脚本" class="headerlink" title="修改科学上网脚本"></a>修改科学上网脚本</h2><p>最后一步，修改科学上网脚本，让它不启动 ss-local 和 ss-redir 进程，改成 Xray 代替。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /jffs/.koolshare/ss/ssconfig.sh</span><br></pre></td></tr></table></figure><p>找到 start_sslocal 函数，在该函数第一行添加 return 即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">start_sslocal() &#123;                           </span><br><span class="line">        return   #直接返回                                             </span><br><span class="line">        if [ &quot;$ss_basic_type&quot; == &quot;1&quot; ]; then</span><br><span class="line">                echo_date 开启ssr-local，提?.socks5代理端口：23456</span><br><span class="line">                rss-local -l 23456 -c $CONFIG_FILE -u -f /var/run/sslocal1.pid &gt;/dev/null 2&gt;&amp;</span><br><span class="line">        elif [ &quot;$ss_basic_type&quot; == &quot;0&quot; ]; then                                               </span><br><span class="line">                echo_date 开启ss-local，提?.socks5代理端口：23456                            </span><br><span class="line">                if [ &quot;$ss_basic_ss_obfs&quot; == &quot;0&quot; ] &amp;&amp; [ &quot;$ss_basic_ss_v2ray&quot; == &quot;0&quot; ]; then   </span><br><span class="line">                        ss-local -l 23456 -c $CONFIG_FILE -u -f /var/run/sslocal1.pid &gt;/dev/n</span><br><span class="line">                else                                                                         </span><br><span class="line">                        ss-local -l 23456 -c $CONFIG_FILE $ARG_OBFS -u -f /var/run/sslocal1.p</span><br><span class="line">                fi                                                                           </span><br><span class="line">        fi                                                                                   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后再找到 start_ss_redir 函数，同样的在该函数第一行添加 return 即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">start_ss_redir() &#123;</span><br><span class="line">        return                                                                                       </span><br><span class="line">        if [ &quot;$ss_basic_type&quot; == &quot;1&quot; ]; then                                                 </span><br><span class="line">                echo_date 开启ssr-redir?.程，用于透明代理.                                   </span><br><span class="line">                BIN=rss-redir                                                                </span><br><span class="line">                ARG_OBFS=&quot;&quot;  </span><br><span class="line">...       </span><br></pre></td></tr></table></figure><p>然后回到科学上网插件，直接点击保存就可以啦（科学上网页面上显示的 ss 配置现在已经完全不会被用到了，可以随便填，真正起到效果的是 /jffs/xray/conf.json 这个 xray 的配置），享受 xray 的飞快速度吧～</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前在 AC86U 上的 KoolShare 改版固件安装了科学上网插件，并开启了 ss + v2ray 插件的方式；但是由于这种方式性能太低，跑到 50M 带宽就把路由器的 CPU 跑满了。&lt;/p&gt;
&lt;p&gt;最近看到 Xray 的 Vless + XTLS 的方案，尝试了下</summary>
      
    
    
    
    
  </entry>
  
</feed>
